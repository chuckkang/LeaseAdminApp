@using DBConnectionTest.Models
@model IEnumerable<DBConnectionTest.ViewModels.VendorViewModel>

@{
    ViewBag.Title = "Vendor List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>List of Vendors</h2>

<p class="text-right">
    @Html.ActionLink("Add New Vendor", "create", "vendors", null, new { @class = "btn btn-primary align-right" })
</p>
<table class="table vendorlist">
    <tr>
        <th class="vendor">
            @Html.DisplayNameFor(model => model.VendorName)
        </th>
        <th class="address">
            @Html.DisplayNameFor(model => model.Address)
        </th>
        <th class="city">
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th class="state">
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th class="zipcode">
            @Html.DisplayNameFor(model => model.ZipCode)
        </th>
        <th class="description">
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th class="action"></th>
    </tr>

@foreach (var item in Model) {

    <tr>
        <td class="vendor">
            @Html.ActionLink(item.VendorName, "expenses", "vendors", new { vendorid = item.VendorID }, null)
        </td>
        <td class="address">
            @Html.DisplayFor(modelItem => item.Address)
        </td>
        <td class="city">
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td class="state">
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td class="zipcode">
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td  class="description">
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td class="action">
            @Html.ActionLink("Edit", "Edit", new { id=item.VendorID }) |
            @Html.ActionLink("Details", "Details", new { id=item.VendorID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.VendorID })
        </td>
    </tr>
}

</table>
